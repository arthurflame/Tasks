version: 0.2
env:
  variables:
    AWS_ACCOUNT_ID: "652304321750"
    AWS_DEFAULT_REGION: "eu-central-1"
    IMAGE_REPO_NAME: "tasks"
    IMAGE_TAG: "latest"


phases:
  install:    
    commands: 
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - aws s3 cp s3://pre-grafana/Dockerrun.aws.json .
      - mkdir -p .platform/nginx/conf_d/
      - touch .platform/nginx/conf_d/testfile.conf

artifacts:
  files:
    - './.platform/nginx/conf_d/testfile.conf'
    - './Dockerrun.aws.json'
  discard-paths: yes